/*
 * Copyright Thoughtworks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = 'GoCD Config API'

java {
  // For use of server-only plugins
  registerFeature('serverOnly') {
    usingSourceSet(sourceSets.create('serverOnly'))
  }
}
CapabilitySupport.extendMain(project, 'serverOnly')

dependencies {
  api project(':base')
  api project(':db')
  implementation project(':util')
  api project(':plugin-infra:plugin-metadata-store')
  implementation project(':plugin-infra:go-plugin-domain')
  implementation project(':plugin-infra:go-plugin-api')
  implementation project.deps.jakartaAnnotation

  implementation project.deps.gson
  api project.deps.jdom
  implementation project.deps.commonsCodec
  implementation project.deps.commonsIO
  implementation project.deps.commonsText
  implementation project.deps.commonsLang3
  serverOnlyImplementation project.deps.quartz
  implementation project.deps.cloning
  implementation(project.deps.apacheHttpComponents) {
    exclude(module: 'commons-codec')
  }
  implementation project.deps.springWeb
  if (project.deps.springWeb || project.deps.apacheHttpComponents) {
    runtimeOnly project.deps.slf4jJcl // Allow commons-logging replacement
  }
  implementation project.deps.slf4jApi
  annotationProcessor project.deps.lombok
  compileOnly project.deps.lombok
  compileOnly project.deps.jetBrainsAnnotations

  testImplementation project.deps.junit5Api
  testRuntimeOnly project.deps.junit5Engine
  testRuntimeOnly project.deps.junit5PlatformLauncher
  testImplementation project.deps.mockitoCore
  testImplementation project.deps.junit5Params
  testImplementation project.deps.assertJ
  testImplementation project.deps.systemStubs
  testImplementation(testFixtures(project(':test:test-utils')))

  testFixturesApi project.deps.junit5Api
  testFixturesImplementation project(':util')
  testFixturesImplementation(testFixtures(project(':test:test-utils')))
}
